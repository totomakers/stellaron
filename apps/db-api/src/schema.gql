# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Character {
  abilities: [CharacterAbility!]!
  combatType: CombatType!
  id: ID!
  name: String!
  path: Path!
  rarity: Int!
  slug: String!
  stats: [CharacterStat!]!
  traces: [CharacterTrace!]!
}

type CharacterAbility {
  id: ID!
  type: CharacterAbilityType!
}

enum CharacterAbilityType {
  BasicAtk
  Skill
  Talent
  Technique
}

type CharacterStat {
  id: ID!
  type: CharacterStatType!
  value: Float!
}

enum CharacterStatType {
  Atk
  BreakEffect
  CritDmg
  CritRate
  Def
  EffectHitRate
  EffectRes
  EnergyRegenerationRate
  FireDmgBoost
  FireResBoost
  Hp
  IceDmgBoost
  IceResBoost
  ImaginaryDmgBoost
  ImaginaryResBoost
  LightningDmgBoost
  LightningResBoost
  MaxEnergy
  OutgoingHealingBoost
  QuantumDmgBoost
  QuantumResBoost
  Spd
  WindDmgBoost
  WindResBoost
}

input CharacterStatsFiltersInput {
  characterIds: [ID!]
  type: [CharacterStatType!]
}

type CharacterTrace {
  id: ID!
  type: CharacterTraceType!
}

enum CharacterTraceType {
  BasicAtk
  BonusAbility
  BonusStat
  Skill
  Talent
  Technique
}

input CharacterTracesFiltersInput {
  characterIds: [ID!]
  query: String
  type: [CharacterTraceType!]
}

input CharactersFiltersInput {
  combatTypes: [CombatType!]
  paths: [Path!]
  query: String
  rarities: [Int!]
}

enum CombatType {
  Fire
  Ice
  Imaginary
  Lightning
  Quantum
  Wind
}

type LightCone {
  combatType: CombatType!
  id: ID!
  name: String!
  path: Path!
  rarity: Int!
  slug: String!
  stats: [LightConeStat!]!
}

type LightConeStat {
  id: ID!
  type: CharacterStatType!
  value: Float!
}

input LightConeStatsFiltersInput {
  lightConeIds: [ID!]
  type: [CharacterStatType!]
}

input LightConesFiltersInput {
  combatTypes: [CombatType!]
  paths: [Path!]
  query: String
  rarities: [Int!]
}

enum Path {
  Abundance
  Destruction
  Erudition
  Harmony
  Hunt
  Nihility
  Preservation
}

type Query {
  characterStats(filters: CharacterStatsFiltersInput): [CharacterStat!]!
  characterTraces(filters: CharacterTracesFiltersInput): [CharacterTrace!]!
  characters(filters: CharactersFiltersInput): [Character!]!
  lightConeStats(filters: LightConeStatsFiltersInput): [LightConeStat!]!
  lightCones(filters: LightConesFiltersInput): [LightCone!]!
}